(defwidget winworkspacebox [wspace]
  (box ; Note: height 100px width 356px
    :space-evenly false :orientation "v"
    :class "taskview-ws taskview-ws-${wspace[0].workspace.id == activews}"
    (label
      :class "wintaskview-text"
      :xalign 0
      :text "Desktop ${wspace[0].workspace.id}"
    )
    (box
      :space-evenly false :orientation "h"
      :style "
      min-width: ${RES_WIDTH * TASKVIEW_SCALE}px;
      min-height: ${RES_HEIGHT * TASKVIEW_SCALE}px;
      "
      (overlay
        (box
          :style "
          min-width: ${RES_WIDTH * TASKVIEW_SCALE}px;
          min-height: ${RES_HEIGHT * TASKVIEW_SCALE}px;
          "
        )
        (image
          :class "wintaskview-workspace-bg"
          :path "./images/wallpaper/wallpaper_small"
          :image-width {RES_WIDTH * TASKVIEW_SCALE}
          :image-height {RES_HEIGHT * TASKVIEW_SCALE}
        )
        (box
          :space-evenly false :orientation "h"
          (for ws-window in wspace
            (box
              :class "${ws-window.class == 'workspace' ? '' : 'overview-ws-window'}"
              :style "
              ${ws-window.address == selected ? 'border: 1px solid #FFFFFF' : ''};
              ${ws-window.address == '_none' ? 'border: none' : ''};
              margin-left: ${ws-window.at[0] * TASKVIEW_SCALE}px;
              margin-top: ${ws-window.at[1] * TASKVIEW_SCALE}px;
              margin-right: -${(ws-window.at[0] + ws-window.size[0]) * TASKVIEW_SCALE}px;
              margin-bottom: ${RES_HEIGHT * TASKVIEW_SCALE - ((ws-window.at[1] + ws-window.size[1]) * TASKVIEW_SCALE)};
              "
              (eventbox
                :onrightclick "scripts/selectwindow ${ws-window.address} '${EWW_CMD}' ${ws-window.workspace.id}"
                :onmiddleclick "hyprctl dispatch closewindow address:${ws-window.address}"
                :onclick "scripts/focuswindow ${ws-window.address} ${ws-window.workspace.id} scripts/toggle-wintaskview.sh --close &"
                :onhover "${ws-window.class == 'workspace' ? '' : (EWW_CMD + ' update overview_hover_name=\'' + ws-window + '\'')}"
                (box
                  :class "overview-background"
                  ; Uncomment below to enable thumbnail previews (VERY SLOW)
                  ; :style "
                  ; background-image: url('scripts/cache/thumbnails/${ws-window.address }.png');
                  ; "
                  (image
                    :class "overview-icon"
                    :path {ws-window.icon}
                    :image-width {round(ws-window.size[0] * TASKVIEW_SCALE * 45 / 100, 0)}
                    :image-height {round(ws-window.size[1] * TASKVIEW_SCALE * 45 / 100, 0)}
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(defwidget wintaskview_widget []
  (box
    :space-evenly false
    :orientation "v"
    :class "thewholething"
    (eventbox
      :onclick "scripts/toggle-wintaskview.sh --close &"
      :onmiddleclick "scripts/toggle-wintaskview.sh --close &"
      :onrightclick "scripts/toggle-wintaskview.sh --close &"
      :onscroll "echo {} | sed -e \"s/up/-1/g\" -e \"s/down/+1/g\" | xargs hyprctl dispatch workspace"
      (box
        :width RES_WIDTH :height {RES_HEIGHT - 50}
        :class "wintaskview-bg"
        (box
          :valign "end"
          :class "wintaskview-workspaces-bg"
          :style "
          ${anim_open_wintaskview ? 'transition: 150ms cubic-bezier(0.05, 0.7, 0.1, 1);' : 'transition: 100ms cubic-bezier(0.3, 0, 0.8, 0.15);'}
          ${rev_wintaskview ? '' : 'margin-bottom: -900px;'}
          min-height: ${RES_HEIGHT * TASKVIEW_SCALE}px;
          "
          (box
            :orientation "h" :space-evenly false
            :halign "center"
            (box
              :orientation "h" :space-evenly false
              (for wspace in wsjsona
                (winworkspacebox
                  :wspace {wspace}
                )
              )
            )
            (box
              :orientation "h" :space-evenly false
              (for wspace in wsjsonb
                (winworkspacebox
                  :wspace {wspace}
                )
              )
            )
          )
        )
      )
    )
  )
)

(defwindow wintaskview
  :stacking "overlay"
  :wm-ignore true
  :focusable true
  :monitor 0
  :geometry (geometry
    :anchor "top center"
  )
  (wintaskview_widget)
)
