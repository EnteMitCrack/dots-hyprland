(defwidget sideright_widget []
  (box
    :space-evenly false
    :halign "end"
    :style "
    ${open_sideright ? 'transition: 200ms cubic-bezier(0.05, 0.7, 0.1, 1);' : 'transition: 150ms cubic-bezier(0.3, 0, 0.8, 0.15);'}
    ${open_sideright ? '' : 'margin-right: -900px;'}
    "
    (eventbox
      :onhoverlost {EWW_CMD + ' update bar_offset=0 && ' + EWW_CMD + ' update open_sideright=false &'}
      (box
        :orientation "v"
        :space-evenly false :spacing 5
        :halign "end"
        :class "window"
        :style "
        min-width: 580px;
        "
        (box
          :space-evenly false :orientation "h"
          (eventbox
            :onclick {EWW_CMD + ' update bar_offset=0 && ' + EWW_CMD + ' update open_sideright=false &'}
            (box
              :space-evenly false :spacing 10
              :halign "start"
              :height {BAR_HEIGHT} :width 400
              :class "sidebar-bg sidebar-bg-pad"
              (label :xalign 0
                :class "bar-icon-material-hugeass"
                :text "Settings"
              )
              (label :xalign 0
                :hexpand true
                :class "bar-txt-hugeass"
                :text "System"
              )
              (box
                :orientation "v"
                (label :xalign 1
                  :class "bar-txt-small"
                  :text "Unhover to close"
                )
              )
            )
          )
        )
        (box
          :height {RES_HEIGHT - (BAR_HEIGHT + GAPS * 3)}
          :class "sidebar-bg"
        )
      )
    )
  )
)

(defwindow sideright
  :monitor 0
  :stacking "fg"
  ;   :focusable true
  ; :namespace "noblur"
  :geometry (geometry
    :height "100%"
    :anchor "top right"
  )
  (sideright_widget)
)